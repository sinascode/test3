name: memo-app With Github Actions

on:
  workflow_dispatch:

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Make application.properties
      run: |
        mkdir -p ./src/main/resources
        cd ./src/main/resources
        touch ./application.properties
        echo "${{ secrets.PROPERTIES }}" > ./application.properties
      shell: bash

    - name: Build with Maven
      run: mvn -B -DskipTests package --file pom.xml

    - name: Naming jar file
      run: mv ./target/*.jar ./target/app.jar

    - name: Check jar file
      run: ls ./target

    - uses: actions/upload-artifact@v4
      with:
        name: app
        path: ./target/*.jar

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Set SHORT_SHA env
      run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:${{ env.SHORT_SHA }}
       
  cd:
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER_NAME }}
          
      - uses: actions/checkout@v4
        with:
          ref: manifest
          token: ${{ secrets.GIT_TOKEN }}
          
      - name: Set SHORT_SHA env
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV
        
      - name: Set DATE
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
        
      - name: Set environment variables
        run: |
          # if [ "${{ github.ref }}" == "refs/heads/backend" ]; then
          #   echo "ENVIRONMENT=prod" >> $GITHUB_ENV
          # else
          echo "ENVIRONMENT=dev" >> $GITHUB_ENV
          # fi
          
      - name: Set up Image for Kustomize
        run: |
          cd overlays/${{ env.ENVIRONMENT }}
          sed -i "s|newTag:.*|newTag: ${{ env.SHORT_SHA }}|g" kustomization.yaml
          
      - name: Set up Image for direct manifest (if exists)
        run: |
          if [ -f "./manifest/memo-app.yaml" ]; then
            sed -i "s%image: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:[a-f0-9]\+%image: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:${{ env.SHORT_SHA }}%" ./manifest/memo-app.yaml
          fi
          
      - name: Commit and push changes
        run: |
          git config --local user.email "${{ secrets.EMAIL }}"
          git config --local user.name "HIRedrain"
          git add .
          git commit -m "Update ${{ env.ENVIRONMENT }} image version to ${{ env.date }} - ${{ env.SHORT_SHA }}"
          git push

